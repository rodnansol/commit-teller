name: Release & Deploy
on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Release version'
        required: true
        type: string

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    name: tagging-and-releasing
    env:
      JRELEASER_TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
      JRELEASER_TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
      JRELEASER_TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
      JRELEASER_TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
      JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
      JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
      JRELEASER_NEXUS2_MAVEN_CENTRAL_USERNAME: ${{ secrets.OSSRH_USERNAME }}
      JRELEASER_NEXUS2_MAVEN_CENTRAL_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: graalvm/setup-graalvm@v1
        name: Setup GraalVM 22.3.0
        with:
          version: '22.3.0'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'
          cache: maven
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}
      - name: Stage Files for Release
        run: |
          ./mvnw versions:set -DnewVersion=$RELEASE_VERSION
          ./mvnw -Prelease,uber-jar deploy -DaltDeploymentRepository=local::file:./target/staging-deploy
        env:
          RELEASE_VERSION: ${{ inputs.releaseVersion }}
      - name: Run JReleaser - Full Release
        run: |
          ./mvnw jreleaser:full-release -Prelease -N
        
